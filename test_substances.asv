clc;
clear;
close all;
alpha = 0.05;

% == 0. Read in substances xlsx sheet =====================================0. R. substances test
filename = 'dice_cov_substances.xlsx';
% % sheetnames = {'wine_7days_mm'};
% % disp(sheetnames(1));
% mat = readmatrix(filename, 'Sheet', 'beer_7days_mm', 'Range', 'B3:L7');
% mat2 = readmatrix(filename);
% mat3 = readmatrix(filename, 'Sheet', 'beer_7days_mm');
% %disp(mat);
% disp(mat2);
% disp(mat3);
% =========================================================================0. R. substances test

% NOTE - ALL DIVISIONS BY ZERO --> 0 BECAUSE NO SUBJECTS WERE IN THAT ROUND
% so those means become (clearly) zero

% == MM Read in =========================================================== MM read
beer_7days_mm   = readmatrix(filename, 'Sheet', 'beer_7days_mm');
wine_7days_mm   = readmatrix(filename, 'Sheet', 'wine_7days_mm');
liquor_7days_mm = readmatrix(filename, 'Sheet', 'liquor_7days_mm');
coffee_7days_mm = readmatrix(filename, 'Sheet', 'coffee_7days_mm');
tea_7days_mm    = readmatrix(filename, 'Sheet', 'tea_7days_mm');
bang_7days_mm   = readmatrix(filename, 'Sheet', 'bang_7days_mm');
% ========================================================================= MM read


% == Less/More Read in ====================================================Less/More read
mod_alc_consump_le_mo = readmatrix(filename, 'Sheet', 'mod_alc_consump_le_mo');
mod_stim_consump_le_mo = readmatrix(filename, 'Sheet', 'mod_stim_consump_le_mo');
% =========================================================================Less/More read

% == beer_7days_mm ======================================================== beer_7days_mm
% regression - we have a time series here and want to model it with
% a linear regression see if there is true change
beer_reg = fitlm(beer_7days_mm(1,:), beer_7days_mm(6,:), 'linear');
% beer_reg.Rsquared.adjusted; - R^2 adjusted value
% beer_reg.Coefficients.Estimate(2); - slope value
% plot(beer_reg)
% sex wise/alone wise data is not categorical data, we are looking at
% differences in means between 2 groups --> now check parametric
% -- perform sex/alone tests ----------------------------------------------SA
beer_fem = beer_7days_mm(10,:)';
beer_men = beer_7days_mm(11,:)';
beer_alone    = beer_7days_mm(17,:)';
beer_two_more = beer_7days_mm(18,:)'; 


beer_sex_param_check   = chk_parametric([beer_fem, beer_men], alpha);
beer_alone_param_check = chk_parametric([beer_alone,beer_two_more], alpha);
% row 10 is female, row 11 is male
% not parametric - fails 2nd test - non equal variances

% using mwwtest - Guiseppe Cardillo
[beer_sex_mww, beer_sex_h]     = ranksum(beer_fem, beer_men);
[beer_alone_mww, beer_alone_h] = ranksum(beer_alone, beer_two_more);
% -------------------------------------------------------------------------SA
% ========================================================================= beer_7days_mm

% == wine_7days_mm ======================================================== wine_7days_mm
% regression - we have a time series here and want to model it with
% a linear regression see if there is true change
wine_reg = fitlm(wine_7days_mm(1,:), wine_7days_mm(6,:), 'linear');
% wine_reg.Rsquared.adjusted; - R^2 adjusted value
% wine_reg.Coefficients.Estimate(2); - slope value
% plot(wine_reg)
% sex wise/alone wise data is not categorical data, we are looking at
% differences in means between 2 groups --> now check parametric
% -- perform sex/alone tests ----------------------------------------------SA
wine_fem = wine_7days_mm(10,:)';
wine_men = wine_7days_mm(11,:)';
wine_alone    = wine_7days_mm(17,:)';
wine_two_more = wine_7days_mm(18,:)'; 


wine_sex_param_check   = chk_parametric([wine_fem, wine_men], alpha);
wine_alone_param_check = chk_parametric([wine_alone,wine_two_more], alpha);
% row 10 is female, row 11 is male
% not parametric - fails 2nd test - non equal variances

% using mwwtest - Guiseppe Cardillo
[wine_sex_mww, wine_sex_h]     = ranksum(wine_fem, wine_men);
[wine_alone_mww, wine_alone_h] = ranksum(wine_alone, wine_two_more);
% -------------------------------------------------------------------------SA
% ========================================================================= wine_7days_mm

% == liquor_7days_mm ======================================================== liquor_7days_mm
% regression - we have a time series here and want to model it with
% a linear regression see if there is true change
liquor_reg = fitlm(liquor_7days_mm(1,:), liquor_7days_mm(6,:), 'linear');
% liquor_reg.Rsquared.adjusted; - R^2 adjusted value
% liquor_reg.Coefficients.Estimate(2); - slope value
% plot(liquor_reg)
% sex wise/alone wise data is not categorical data, we are looking at
% differences in means between 2 groups --> now check parametric
% -- perform sex/alone tests ----------------------------------------------SA
liquor_fem = liquor_7days_mm(10,:)';
liquor_men = liquor_7days_mm(11,:)';
liquor_alone    = liquor_7days_mm(17,:)';
liquor_two_more = liquor_7days_mm(18,:)'; 


liquor_sex_param_check   = chk_parametric([liquor_fem, liquor_men], alpha);
liquor_alone_param_check = chk_parametric([liquor_alone,liquor_two_more], alpha);
% row 10 is female, row 11 is male
% not parametric - fails 2nd test - non equal variances

% using mwwtest - Guiseppe Cardillo
[liquor_sex_mww, liquor_sex_h]     = ranksum(liquor_fem, liquor_men);
[liquor_alone_mww, liquor_alone_h] = ranksum(liquor_alone, liquor_two_more);
% -------------------------------------------------------------------------SA
% ========================================================================= liquor_7days_mm

% == coffee_7days_mm ======================================================== coffee_7days_mm
% regression - we have a time series here and want to model it with
% a linear regression see if there is true change
coffee_reg = fitlm(coffee_7days_mm(1,:), coffee_7days_mm(6,:), 'linear');
% coffee_reg.Rsquared.adjusted; - R^2 adjusted value
% coffee_reg.Coefficients.Estimate(2); - slope value
% plot(coffee_reg)
% sex wise/alone wise data is not categorical data, we are looking at
% differences in means between 2 groups --> now check parametric
% -- perform sex/alone tests ----------------------------------------------SA
coffee_fem = coffee_7days_mm(10,:)';
coffee_men = coffee_7days_mm(11,:)';
coffee_alone    = coffee_7days_mm(17,:)';
coffee_two_more = coffee_7days_mm(18,:)'; 


coffee_sex_param_check   = chk_parametric([coffee_fem, coffee_men], alpha);
coffee_alone_param_check = chk_parametric([coffee_alone,coffee_two_more], alpha);
% row 10 is female, row 11 is male
% not parametric - fails 2nd test - non equal variances

% using mwwtest - Guiseppe Cardillo
[coffee_sex_mww, coffee_sex_h]     = ranksum(coffee_fem, coffee_men);
[coffee_alone_mww, coffee_alone_h] = ranksum(coffee_alone, coffee_two_more);
% -------------------------------------------------------------------------SA
% ========================================================================= coffee_7days_mm

% == tea_7days_mm ======================================================== tea_7days_mm
% regression - we have a time series here and want to model it with
% a linear regression see if there is true change
tea_reg = fitlm(tea_7days_mm(1,:), tea_7days_mm(6,:), 'linear');
% tea_reg.Rsquared.adjusted; - R^2 adjusted value
% tea_reg.Coefficients.Estimate(2); - slope value
% plot(tea_reg)
% sex wise/alone wise data is not categorical data, we are looking at
% differences in means between 2 groups --> now check parametric
% -- perform sex/alone tests ----------------------------------------------SA
tea_fem = tea_7days_mm(10,:)';
tea_men = tea_7days_mm(11,:)';
tea_alone    = tea_7days_mm(17,:)';
tea_two_more = tea_7days_mm(18,:)'; 


tea_sex_param_check   = chk_parametric([tea_fem, tea_men], alpha);
tea_alone_param_check = chk_parametric([tea_alone,tea_two_more], alpha);
% row 10 is female, row 11 is male
% not parametric - fails 2nd test - non equal variances

% using mwwtest - Guiseppe Cardillo
[tea_sex_mww, tea_sex_h]     = ranksum(tea_fem, tea_men);
[tea_alone_mww, tea_alone_h] = ranksum(tea_alone, tea_two_more);
% -------------------------------------------------------------------------SA
% ========================================================================= tea_7days_mm

% == bang_7days_mm ======================================================== bang_7days_mm
% regression - we have a time series here and want to model it with
% a linear regression see if there is true change
bang_reg = fitlm(bang_7days_mm(1,:), bang_7days_mm(6,:), 'linear');
% bang_reg.Rsquared.adjusted; - R^2 adjusted value
% bang_reg.Coefficients.Estimate(2); - slope value
% plot(bang_reg)
% sex wise/alone wise data is not categorical data, we are looking at
% differences in means between 2 groups --> now check parametric
% -- perform sex/alone tests ----------------------------------------------SA
bang_fem = bang_7days_mm(10,:)';
bang_men = bang_7days_mm(11,:)';
bang_alone    = bang_7days_mm(17,:)';
bang_two_more = bang_7days_mm(18,:)'; 


bang_sex_param_check   = chk_parametric([bang_fem, bang_men], alpha);
bang_alone_param_check = chk_parametric([bang_alone,bang_two_more], alpha);
% row 10 is female, row 11 is male
% not parametric - fails 2nd test - non equal variances

% using mwwtest - Guiseppe Cardillo
[bang_sex_mww, bang_sex_h]     = ranksum(bang_fem, bang_men);
[bang_alone_mww, bang_alone_h] = ranksum(bang_alone, bang_two_more);
% -------------------------------------------------------------------------SA
% ========================================================================= bang_7days_mm


% == mod_alc_consump_le_mo ================================================ mod_alc_consump_le_mo
mod_alc_param_check       = chk_parametric(mod_alc_consump_le_mo(2:4,:)',alpha);
mod_alc_sex_param_check   = chk_parametric(mod_alc_consump_le_mo(9:14,:)',alpha);
mod_alc_alone_param_check = chk_parametric(mod_alc_consump_le_mo(19:24,:)',alpha);
% all are non parametric

% run kruskal wallis tests
mod_alc_p = kruskalwallis(mod_alc_consump_le_mo(2:4,:)');
mod_alc_sex_p = 


% ========================================================================= mod_alc_consump_le_mo

% == mod_stim_consump_le_mo =============================================== mod_stim_consump_le_mo
mod_stim_param_check       = chk_parametric(mod_stim_consump_le_mo(2:4,:)',alpha);
mod_stim_sex_param_check   = chk_parametric(mod_stim_consump_le_mo(9:14,:)',alpha);
mod_stim_alone_param_check = chk_parametric(mod_stim_consump_le_mo(19:24,:)',alpha);
% all are non parametric
% ========================================================================= mod_stim_consump_le_mo


